<?xml version="1.0" encoding="UTF-8"?>
<!-- A sample job.xml for testing job parser. Value conventions: all boolean 
	value: true all number value: 5 id value: <element-type>1, e.g., job1, step1, 
	flow1 nested id value: qualified by enclosing id, e.g., flow1.step1 property 
	name/value: name1/value1, name2/value2 the 2nd properties or listener use 
	number 2 instead of 1 in its id or ref -->
<job version="1.0" id="CheckpointJob" restartable="true"
	xmlns="http://xmlns.jcp.org/xml/ns/javaee">
	<properties partition="0">
		<property name="name1" value="value1" />
		<property name="name2" value="value2" />
	</properties>

	<listeners>
		<listener ref="jobCheckpointListener">
			<properties partition="0">
				<property name="name1" value="value1-jobcheckpointlistener" />
				<property name="name2" value="value2-jobcheckpointlistener" />
			</properties>
		</listener>
	</listeners>

	<step id="step1">

		<listeners>
			<listener ref="stepCheckpointListener">
				<properties partition="0">
					<property name="name1" value="value1-stepcheckpointlistener" />
					<property name="name2" value="value2-stepcheckpointlistener" />
				</properties>
			</listener>
			<listener ref="payrollListener">
				<properties partition="0">
					<property name="name1" value="value1-payrolllistener" />
					<property name="name2" value="value2-payrolllistener" />
				</properties>
			</listener>
		</listeners>
		<chunk checkpoint-policy="custom" item-count="5" time-limit="5"
			skip-limit="5" retry-limit="5">
			<reader ref="checkpointItemReader">
				<properties partition="0">
					<property name="name1" value="value1" />
					<property name="name2" value="value2" />
				</properties>
			</reader>

			<processor ref="checkpointItemProcessor">
				<properties partition="0">
					<property name="name1" value="value1" />
					<property name="name2" value="value2" />
				</properties>
			</processor>

			<writer ref="checkpointItemWriter">
				<properties partition="0">
					<property name="name1" value="value1" />
					<property name="name2" value="value2" />
				</properties>
			</writer>

			<checkpoint-algorithm ref="payrollCheckpoint">
				<properties partition="0">
					<property name="name1" value="value1" />
					<property name="name2" value="value2" />
				</properties>
			</checkpoint-algorithm>

			<skippable-exception-classes>
				<include
					class="it.vige.realtime.batchesworkflow.checkpoint.exception.SkippedException" />
				<exclude
					class="it.vige.realtime.batchesworkflow.checkpoint.exception.NoSkippedException" />
			</skippable-exception-classes>

			<retryable-exception-classes>
				<include
					class="it.vige.realtime.batchesworkflow.checkpoint.exception.RetriedException" />
				<include
					class="javax.transaction.RollbackException" />	
				<exclude
					class="it.vige.realtime.batchesworkflow.checkpoint.exception.NoRetriedException" />
			</retryable-exception-classes>

			<no-rollback-exception-classes>
				<include
					class="it.vige.realtime.batchesworkflow.checkpoint.exception.NoRollbackException" />
				<exclude
					class="it.vige.realtime.batchesworkflow.checkpoint.exception.RollbackException" />
			</no-rollback-exception-classes>
		</chunk>
		<end on="on1" exit-status="exit-status1" />
		<fail on="on1" exit-status="exit-status1" />
		<next on="on1" to="to1" />
		<stop on="on1" exit-status="exit-status1" restart="restart1" />
	</step>

</job>
